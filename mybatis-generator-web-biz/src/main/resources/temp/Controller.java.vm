package ${package}.controller;

import java.util.List;
import java.util.Map;

import com.github.mustfun.generator.model.result.Result;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import ${package}.po.${className}Po;
import ${package}.service.${className}Service;
import ${mainPath}.utils.PageUtils;
import ${mainPath}.utils.Query;
import ${mainPath}.utils.R;




/**
 * ${comment}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 * @since jdk 1.8
 */
@RestController
@RequestMapping("/${pathName}")
public class ${className}Controller {
	@Autowired
	private ${className}Service ${classLittleName}Service;
	
	/**
	 * 分页查询数据
	 */
    @RequestMapping("/select_paged")
    public Result<Page<${className}Po>> selectPaged(RowBounds rowBounds){
		Result<Page<${className}Po>> pageResult = new Result<>();
        Page<${className}Po> page =	${classLittleName}Service.selectPaged(rowBounds);
        pageResult.setData(page);
        return pageResult;
    }

    /**
    * 通过id查询
	* @return
	*/
    @RequestMapping("/select_by_id")
    public Result<${className}Po> selectByPrimaryKey(${pk.attrType} ${pk.attrLittleName}){
        Result<${className}Po> result = new Result<>();
		${className}Po po = ${classLittleName}Service.selectByPrimaryKey(${pk.attrLittleName});
		result.setData(po);
        return result;
    }

    /**
    * 通过ID删除
	* @return
	*/
    @RequestMapping("/delete_by_id")
    public Result<Integer> deleteByPrimaryKey(${pk.attrType} ${pk.attrLittleName}){
        Result<Integer> result = new Result<>();
        Integer num = ${classLittleName}Service.deleteByPrimaryKey(${pk.attrLittleName});
        result.setData(num);
        return result;
    }

    /**
    * 新增数据
	* @return
	*/
    @RequestMapping("/save_${classLittleName}")
    public Result<Integer> insert(${className}Po ${classLittleName}){
        Result<Integer> result = new Result<>();
        Integer num	= ${classLittleName}Service.insertSelective(${classLittleName});
        result.setData(num);
        return result;
    }

    /**
     * 修改数据
     * @return
     */
    @RequestMapping("/update_${classLittleName}")
    public Integer updateByPrimaryKeySelective(${className}Po ${classLittleName}){
        Result<Integer> result = new Result<>();
        Integer num = ${classLittleName}Service.updateByPrimaryKeySelective(${classLittleName});
        result.setData(num);
        return result;
    }


    /**
     * 查询列表
     * @return
     */
    @RequestMapping("/query_list")
    public Result<List<${className}Po>> queryByCondition(${className}Po ${classLittleName}){
        Result<List<${className}Po>> result = new Result<>();
        List<${className}Po> list =	${classLittleName}Service.query(${classLittleName});
    	result.setData(list);
        return result;
    }

}
